package xerr

var (
	messageZh = map[uint32]string{
		OK.Code():                    "SUCCESS",
		ServerCommonError.Code():     "服务器开小差啦,稍后再来试一试",
		RequestParamError.Code():     "参数错误",
		TokenExpireError.Code():      "token失效,请重新登陆",
		DbError.Code():               "数据库繁忙,请稍后再试",
		ErrGenerateTokenError.Code(): "生成token失败",
		Unauthorized.Code():          "签名验证错误",

		SpeechToTextErr.Code():           "语音解析失败",
		GptChatNotFoundErr.Code():        "对话框不存在",
		GptChatMappingNotFoundErr.Code(): "会话内容不存在",
		DeleteChatInfoErr.Code():         "删除对话框错误",
		UpdateChatTitleErr.Code():        "修改标题错误",
		NotFoundProductHeaderErr.Code():  "产品请求头不正确",

		ErrUsernamePwd.Code():         "账号或密码不正确",
		ErrUserNoExists.Code():        "用户不存在",
		ErrUserExists.Code():          "该手机号或邮箱已被注册",
		ErrAccountFormat.Code():       "账号格式错误",
		ErrAccountForbidden.Code():    "账号被禁用",
		ErrMobileFormat.Code():        "手机号格式错误",
		ErrAccountExists.Code():       "账号已被注册",
		ErrEmailFormat.Code():         "邮箱格式错误",
		ErrSignup.Code():              "注册失败",
		ErrGoogleSignIn.Code():        "google登录失败",
		ErrGoogleEmailNotFound.Code(): "google用户信息获取失败",
		UpdateUserInfoErr.Code():      "修改用户信息失败",
		ResetPwdUrlErr.Code():         "重置密码链接错误",
		ResetPwdUrlTimeOutErr.Code():  "链接失效，请重新发送邮箱",
		ResetPwdErr.Code():            "重置密码错误",
		OldPwdErr.Code():              "旧密码错误",
		FreeTokenInsufficient.Code():  "免费token余额不足",
		FreeDocInsufficient.Code():    "免费文档数余额不足",
		TokenInsufficient.Code():      "token余额不足",
		ModelUnavailable.Code():       "高级模式功能不可用",
		ModuleUnavailable.Code():      "高级模板功能不可用",
		ErrUpdateAvatar.Code():        "头像修改失败",
		ErrGetAvatar.Code():           "头像获取失败",
		CreditInsufficient.Code():     "Credit额度不足",
		ErrAppleAuthorization.Code():  "授权失败",
		ErrDeleteUser.Code():          "删除账号失败",
		ErrWechatSignIn.Code():        "微信登录失败",
		ErrBindMobile.Code():          "绑定手机号失败",
		ErrCheckIn.Code():             "签到失败",
		ErrGetCheckIn.Code():          "获取签到信息失败",

		//验证码模块
		ErrCptTplCodeNoFound.Code():   "未找到该验证码模板",
		ErrCptNoMatch.Code():          "验证码不正确,请重新输入",
		ErrCptTooFrequent24.Code():    "该手机获取验证码过于频繁，请24小时后重试",
		ErrCptTooFrequent48.Code():    "该手机获取验证码过于频繁，请48小时后重试",
		ErrCptFrequent.Code():         "操作过于频繁，请稍后重试",
		ErrCptExpire.Code():           "验证码失效，请重新获取",
		ErrSendEmail.Code():           "验证发送失败，请重试",
		ErrSendEmailOutOfLimit.Code(): "每小时发送次数超出上限",

		// 系统相关
		ServerCommonError.Code(): "服务异常，请稍后再试",

		// 文档
		ErrSaveDoc.Code():           "新增文档错误",
		ErrDeleteDoc.Code():         "删除文档错误",
		ErrGetDoc.Code():            "查询文档错误",
		ErrDeleteCard.Code():        "删除卡片错误",
		ErrSaveCard.Code():          "新增卡片错误",
		ErrUpdateCard.Code():        "修改卡片错误",
		ErrNotFoundDoc.Code():       "文档不存在",
		ErrUpdateCommentCard.Code(): "修改卡片批注错误",
		ErrInsertCommentCard.Code(): "新增卡片批注错误",
		ErrDeleteCommentCard.Code(): "删除卡片批注错误",
		ErrCommentMaxNum.Code():     "批注数量超过最大限",
		ErrTemplate.Code():          "获取模板错误",
		ErrAddFigurePen.Code():      "新增数字笔错误",
		ErrUpdateFigurePen.Code():   "修改数字笔错误",
		ErrNotFoundFigurePen.Code(): "数字笔不存在",
		ErrFigurePenNum.Code():      "数字笔数量超过限制",
		ErrFigurePenExist.Code():    "数字笔已创建，请勿重复创建",

		// gpt
		ErrMethodNotFound.Code(): "模板方法未找到",
		ErrParam.Code():          "模板参数错误，请确认参数是否完整",
		// pay
		UserSubscription.Code(): "该用户已经订阅",
		ErrBuyAppVerify.Code():  "订阅失败",
		// wap-view
		ErrSaveUserInfo.Code():           "设置用户信息失败",
		ErrStartInterview.Code():         "开始面试失败",
		ErrSaveMapping.Code():            "保存会话信息失败",
		ErrNotFoundChat.Code():           "记录不存在",
		ErrGenerateFeedback.Code():       "面试反馈生成失败",
		ErrNotFoundRandomQuestion.Code(): "该场景没有配置随机问题",
		ErrNotFoundIntroduction.Code():   "该场景没有配置介绍问题",
		ErrNotFoundPrompt.Code():         "该场景没有配置提示词",
	}

	messageEn = map[uint32]string{
		OK.Code():                        "SUCCESS",
		ServerCommonError.Code():         "Server encountered a glitch, please try again later",
		RequestParamError.Code():         "Parameter error",
		TokenExpireError.Code():          "Token expired, please log in again",
		DbError.Code():                   "Database busy, please try again later",
		ErrGenerateTokenError.Code():     "Failed to generate token",
		Unauthorized.Code():              "Signature validation error",
		ErrUsernamePwd.Code():            "Incorrect account or password",
		ErrUserNoExists.Code():           "User does not exist",
		ErrUserExists.Code():             "This phone number or email has already been registered",
		ErrAccountFormat.Code():          "Account format error",
		ErrAccountForbidden.Code():       "Account has been disabled",
		ErrMobileFormat.Code():           "Mobile number format error",
		ErrAccountExists.Code():          "Account already registered",
		ErrEmailFormat.Code():            "Email format error",
		ErrSignup.Code():                 "Registration failed",
		ErrGoogleSignIn.Code():           "Google sign-in failed",
		ErrGoogleEmailNotFound.Code():    "Failed to retrieve Google user information",
		UpdateUserInfoErr.Code():         "Failed to update user information",
		ResetPwdUrlErr.Code():            "Reset password link error",
		ResetPwdUrlTimeOutErr.Code():     "Link expired, please resend the email",
		ResetPwdErr.Code():               "Reset password error",
		OldPwdErr.Code():                 "Incorrect old password",
		FreeTokenInsufficient.Code():     "Insufficient free token balance",
		FreeDocInsufficient.Code():       "Insufficient free document balance",
		TokenInsufficient.Code():         "Insufficient token balance",
		ModelUnavailable.Code():          "Advanced mode function unavailable",
		ModuleUnavailable.Code():         "Advanced template function unavailable",
		ErrUpdateAvatar.Code():           "Failed to update avatar",
		ErrGetAvatar.Code():              "Failed to retrieve avatar",
		CreditInsufficient.Code():        "Credit Insufficient",
		ErrCptTplCodeNoFound.Code():      "Template for verification code not found",
		ErrCptNoMatch.Code():             "Incorrect verfication ",
		ErrCptTooFrequent24.Code():       "Verification code retrieval too frequent for this phone, please retry after 24 hours",
		ErrCptTooFrequent48.Code():       "Verification code retrieval too frequent for this phone, please retry after 48 hours",
		ErrCptFrequent.Code():            "Operation too frequent, please try again later",
		ErrCptExpire.Code():              "Verification code timeout",
		ServerErr.Code():                 "Server error",
		LimitExceed.Code():               "Limit exceeded",
		AccessDenied.Code():              "Insufficient access permissions",
		RequestIllegal.Code():            "Illegal request",
		RequestThirdErr.Code():           "Failed to request third-party",
		SpeechToTextErr.Code():           "Speech recognition failed",
		GptChatNotFoundErr.Code():        "Dialogue box does not exist",
		GptChatMappingNotFoundErr.Code(): "Conversation content does not exist",
		DeleteChatInfoErr.Code():         "Error deleting dialogue box",
		UpdateChatTitleErr.Code():        "Error modifying title",
		NotFoundProductHeaderErr.Code():  "Not Found Product Header",
		ErrSaveDoc.Code():                "Error adding document",
		ErrDeleteDoc.Code():              "Error deleting document",
		ErrGetDoc.Code():                 "Error retrieving document",
		ErrDeleteCard.Code():             "Error deleting card",
		ErrSaveCard.Code():               "Error adding card",
		ErrUpdateCard.Code():             "Error modifying card",
		ErrNotFoundDoc.Code():            "Document does not exist",
		ErrUpdateCommentCard.Code():      "Error modifying card annotation",
		ErrInsertCommentCard.Code():      "Error adding card annotation",
		ErrDeleteCommentCard.Code():      "Error deleting card annotation",
		ErrCommentMaxNum.Code():          "Annotation quantity exceeds maximum limit",
		ErrTemplate.Code():               "Error retrieving template",
		ErrAddFigurePen.Code():           "Error adding digital pen",
		ErrUpdateFigurePen.Code():        "Error modifying digital pen",
		ErrNotFoundFigurePen.Code():      "Digital pen does not exist",
		ErrFigurePenNum.Code():           "Digital pen quantity exceeds limit",
		ErrFigurePenExist.Code():         "Digital pen already created, please do not repeat",
		ErrMethodNotFound.Code():         "Template method not found",
		ErrParam.Code():                  "Template parameter error, please confirm if the parameters are complete",
		UserSubscription.Code():          "User has already subscribed",
		ErrBuyAppVerify.Code():           "subscribed failed",
		ErrSaveUserInfo.Code():           "Failed to set user information",
		ErrStartInterview.Code():         "Failed to start interview",
		ErrSaveMapping.Code():            "Failed to save session information",
		ErrNotFoundChat.Code():           "Record does not exist",
		ErrGenerateFeedback.Code():       "Failed to generate interview feedback",
		ErrSendEmail.Code():              "Failed to send verification",
		ErrAppleAuthorization.Code():     "Apple authorization failure",
		ErrWechatSignIn.Code():           "wechat sign-in failed",
		ErrBindMobile.Code():             "bind mobile failed",
		ErrCheckIn.Code():                "check in failed",
		ErrGetCheckIn.Code():             "get check in info failed",
		ErrNotFoundRandomQuestion.Code(): "No random questions are configured for this scene",
		ErrNotFoundIntroduction.Code():   "The introduction problem is not configured for this scene",
		ErrNotFoundPrompt.Code():         "The prompt is not configured for this scene",
	}
)

func Init(lang string) {
	switch lang {
	case "zh":
		Register(messageZh)
	case "en":
		Register(messageEn)
	default:
		panic("unknown lang type")
	}

}
